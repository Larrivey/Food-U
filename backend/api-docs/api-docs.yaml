openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://localhost:8443
  description: Generated server url
paths:
  /api/users/recipe/{id}:
    put:
      tags:
      - user-rest-controller
      operationId: addRecipe
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Recipe'
  /api/users/menu/{id}:
    put:
      tags:
      - user-rest-controller
      operationId: ActivateMenu
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Menu'
  /api/recipes/{id}:
    get:
      tags:
      - recipe-rest-controller
      operationId: getRecipe
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Recipe'
    put:
      tags:
      - recipe-rest-controller
      operationId: updateRecipe
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: time
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: difficulty
        in: query
        required: true
        schema:
          type: string
      - name: preparation
        in: query
        required: true
        schema:
          type: string
      - name: ingredients
        in: query
        required: true
        schema:
          type: string
      - name: booleanos
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Recipe'
    delete:
      tags:
      - recipe-rest-controller
      operationId: processDeleteRecipe
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Recipe'
  /api/diets/menus/{id}:
    put:
      tags:
      - diet-rest-controller
      operationId: processAddDiet
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Menu'
  /api/users/new:
    post:
      tags:
      - user-rest-controller
      operationId: processRegister
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        "201":
          description: Created
          content: {}
  /api/recipes/{id}/image:
    get:
      tags:
      - recipe-rest-controller
      operationId: downloadImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - recipe-rest-controller
      operationId: uploadImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              required:
              - imageRecipe
              type: object
              properties:
                imageRecipe:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Recipe'
  /api/recipes/new:
    post:
      tags:
      - recipe-rest-controller
      operationId: createRecipe
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: time
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: difficulty
        in: query
        required: true
        schema:
          type: string
      - name: preparation
        in: query
        required: true
        schema:
          type: string
      - name: ingredients
        in: query
        required: true
        schema:
          type: string
      - name: booleanos
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Recipe'
  /api/menus/new:
    post:
      tags:
      - menu-rest-controller
      operationId: processRecipeMaker
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: lunchMonday
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: lunchTuesday
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: lunchWednesday
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: lunchThursday
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: lunchFriday
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: lunchSaturday
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: lunchSunday
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: dinnerMonday
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: dinnerTuesday
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: dinnerWednesday
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: dinnerThursday
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: dinnerFriday
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: dinnerSaturday
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: dinnerSunday
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Menu'
  /api/diets/new:
    post:
      tags:
      - diet-rest-controller
      operationId: processFormDiet
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: menuList
        in: query
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content: {}
  /api/auth/refresh:
    post:
      tags:
      - login-rest-controller
      operationId: refreshToken
      parameters:
      - name: RefreshToken
        in: cookie
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/auth/login:
    post:
      tags:
      - login-rest-controller
      operationId: processForm
      parameters:
      - name: AuthToken
        in: cookie
        required: false
        schema:
          type: string
      - name: RefreshToken
        in: cookie
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /message:
    get:
      tags:
      - backend-application
      operationId: getMessage
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /getMoreRecipes:
    get:
      tags:
      - recipe-controller
      operationId: getMoreProducts
      parameters:
      - name: page
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageRecipe'
  /api/users/{id}:
    get:
      tags:
      - user-rest-controller
      operationId: getUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content: {}
  /api/users/recipes:
    get:
      tags:
      - user-rest-controller
      operationId: getAllYourRecipes
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
  /api/users/menu:
    get:
      tags:
      - user-rest-controller
      operationId: getMenu_Activo
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Menu'
  /api/users/me:
    get:
      tags:
      - user-rest-controller
      operationId: getProfile
      responses:
        "200":
          description: OK
          content: {}
  /api/users/diets:
    get:
      tags:
      - user-rest-controller
      operationId: getStoredDiets
      responses:
        "200":
          description: OK
          content: {}
  /api/users/all:
    get:
      tags:
      - user-rest-controller
      operationId: getProfiles
      responses:
        "200":
          description: OK
          content: {}
  /api/recipes/:
    get:
      tags:
      - recipe-rest-controller
      operationId: getRecipes
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
  /api/menus/{id}:
    get:
      tags:
      - menu-rest-controller
      operationId: getMenu_Selected
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Menu'
  /api/menus/:
    get:
      tags:
      - menu-rest-controller
      operationId: getMenu_All
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
  /api/diets/{id}:
    get:
      tags:
      - diet-rest-controller
      operationId: getDietPage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content: {}
  /api/diets/:
    get:
      tags:
      - diet-rest-controller
      operationId: getDiet_All
      responses:
        "200":
          description: OK
          content: {}
  /api/auth/logout:
    get:
      tags:
      - login-rest-controller
      operationId: LogOut
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
components:
  schemas:
    Recipe:
      type: object
      properties:
        id:
          type: integer
          format: int64
        preparation:
          type: string
        name:
          type: string
        cookTime:
          type: integer
          format: int32
        difficulty:
          type: string
        uploadDate:
          type: string
          format: date-time
        ingredients:
          type: string
        creator:
          type: string
        hasPhoto:
          type: boolean
        vegetables:
          type: boolean
        protein:
          type: boolean
        hydrates:
          type: boolean
        carbohydrates:
          type: boolean
        highinfat:
          type: boolean
    Menu:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        weeklyPlan:
          type: array
          items:
            $ref: '#/components/schemas/Recipe'
        lunchs:
          type: array
          items:
            $ref: '#/components/schemas/Recipe'
        healthy:
          type: boolean
        score:
          type: integer
          format: int32
        dinners:
          type: array
          items:
            $ref: '#/components/schemas/Recipe'
        menuScore:
          type: array
          items:
            type: integer
            format: int32
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        mail:
          type: string
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Pageable:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/Sort'
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    Sort:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    PageRecipe:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Recipe'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/Pageable'
        empty:
          type: boolean
